//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SIFFSEntities : DbContext
    {
        public SIFFSEntities()
            : base("name=SIFFSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Compra> Compra { get; set; }
        public virtual DbSet<Detalle_Compra> Detalle_Compra { get; set; }
        public virtual DbSet<Detalle_dev_compra> Detalle_dev_compra { get; set; }
        public virtual DbSet<Detalle_Venta> Detalle_Venta { get; set; }
        public virtual DbSet<Devolucion_Compra> Devolucion_Compra { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<PresentacionProducto> PresentacionProducto { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<RubroProducto> RubroProducto { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tipo_producto> Tipo_producto { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<ComprasProveedor> ComprasProveedor { get; set; }
        public virtual DbSet<VentasClientes> VentasClientes { get; set; }
    
        public virtual ObjectResult<Cliente_Busqueda_Result> Cliente_Busqueda(string condicion)
        {
            var condicionParameter = condicion != null ?
                new ObjectParameter("condicion", condicion) :
                new ObjectParameter("condicion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cliente_Busqueda_Result>("Cliente_Busqueda", condicionParameter);
        }
    
        public virtual int Cliente_DEL(Nullable<int> cod_cliente)
        {
            var cod_clienteParameter = cod_cliente.HasValue ?
                new ObjectParameter("Cod_cliente", cod_cliente) :
                new ObjectParameter("Cod_cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cliente_DEL", cod_clienteParameter);
        }
    
        public virtual int Cliente_INS(string dNI, string pN, string sN, string pA, string sA, Nullable<System.DateTime> fechaNac, string dir, string tel)
        {
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var pNParameter = pN != null ?
                new ObjectParameter("PN", pN) :
                new ObjectParameter("PN", typeof(string));
    
            var sNParameter = sN != null ?
                new ObjectParameter("SN", sN) :
                new ObjectParameter("SN", typeof(string));
    
            var pAParameter = pA != null ?
                new ObjectParameter("PA", pA) :
                new ObjectParameter("PA", typeof(string));
    
            var sAParameter = sA != null ?
                new ObjectParameter("SA", sA) :
                new ObjectParameter("SA", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("fechaNac", fechaNac) :
                new ObjectParameter("fechaNac", typeof(System.DateTime));
    
            var dirParameter = dir != null ?
                new ObjectParameter("dir", dir) :
                new ObjectParameter("dir", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cliente_INS", dNIParameter, pNParameter, sNParameter, pAParameter, sAParameter, fechaNacParameter, dirParameter, telParameter);
        }
    
        public virtual ObjectResult<Cliente_S_Result> Cliente_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cliente_S_Result>("Cliente_S");
        }
    
        public virtual ObjectResult<string> Cliente_UPD(Nullable<int> cod_cliente, string dNI, string pN, string sN, string pA, string sA, Nullable<System.DateTime> fechaNac, string dir, string tel)
        {
            var cod_clienteParameter = cod_cliente.HasValue ?
                new ObjectParameter("cod_cliente", cod_cliente) :
                new ObjectParameter("cod_cliente", typeof(int));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var pNParameter = pN != null ?
                new ObjectParameter("PN", pN) :
                new ObjectParameter("PN", typeof(string));
    
            var sNParameter = sN != null ?
                new ObjectParameter("SN", sN) :
                new ObjectParameter("SN", typeof(string));
    
            var pAParameter = pA != null ?
                new ObjectParameter("PA", pA) :
                new ObjectParameter("PA", typeof(string));
    
            var sAParameter = sA != null ?
                new ObjectParameter("SA", sA) :
                new ObjectParameter("SA", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("fechaNac", fechaNac) :
                new ObjectParameter("fechaNac", typeof(System.DateTime));
    
            var dirParameter = dir != null ?
                new ObjectParameter("dir", dir) :
                new ObjectParameter("dir", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Cliente_UPD", cod_clienteParameter, dNIParameter, pNParameter, sNParameter, pAParameter, sAParameter, fechaNacParameter, dirParameter, telParameter);
        }
    
        public virtual ObjectResult<Compra_Busqueda_Result> Compra_Busqueda(Nullable<int> id_compra)
        {
            var id_compraParameter = id_compra.HasValue ?
                new ObjectParameter("id_compra", id_compra) :
                new ObjectParameter("id_compra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Compra_Busqueda_Result>("Compra_Busqueda", id_compraParameter);
        }
    
        public virtual ObjectResult<string> Compra_INS(Nullable<int> idProv, Nullable<int> idUsuario)
        {
            var idProvParameter = idProv.HasValue ?
                new ObjectParameter("IdProv", idProv) :
                new ObjectParameter("IdProv", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Compra_INS", idProvParameter, idUsuarioParameter);
        }
    
        public virtual ObjectResult<Compra_S_Result> Compra_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Compra_S_Result>("Compra_S");
        }
    
        public virtual int Detalle_Compra_INS(Nullable<int> idCompra, string codigoProd, Nullable<double> precioCompra, Nullable<int> cantidad)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("idCompra", idCompra) :
                new ObjectParameter("idCompra", typeof(int));
    
            var codigoProdParameter = codigoProd != null ?
                new ObjectParameter("CodigoProd", codigoProd) :
                new ObjectParameter("CodigoProd", typeof(string));
    
            var precioCompraParameter = precioCompra.HasValue ?
                new ObjectParameter("precioCompra", precioCompra) :
                new ObjectParameter("precioCompra", typeof(double));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Detalle_Compra_INS", idCompraParameter, codigoProdParameter, precioCompraParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<Detalle_Compra_S_Result> Detalle_Compra_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Detalle_Compra_S_Result>("Detalle_Compra_S");
        }
    
        public virtual int Detalle_Compra_UPD(Nullable<int> id_DetalleCompra, string cod_producto, Nullable<int> nuevacantidad, Nullable<double> precio, string accion)
        {
            var id_DetalleCompraParameter = id_DetalleCompra.HasValue ?
                new ObjectParameter("id_DetalleCompra", id_DetalleCompra) :
                new ObjectParameter("id_DetalleCompra", typeof(int));
    
            var cod_productoParameter = cod_producto != null ?
                new ObjectParameter("cod_producto", cod_producto) :
                new ObjectParameter("cod_producto", typeof(string));
    
            var nuevacantidadParameter = nuevacantidad.HasValue ?
                new ObjectParameter("nuevacantidad", nuevacantidad) :
                new ObjectParameter("nuevacantidad", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var accionParameter = accion != null ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Detalle_Compra_UPD", id_DetalleCompraParameter, cod_productoParameter, nuevacantidadParameter, precioParameter, accionParameter);
        }
    
        public virtual ObjectResult<DetalleCompraBuscar_Result> DetalleCompraBuscar(Nullable<int> id_detCompra)
        {
            var id_detCompraParameter = id_detCompra.HasValue ?
                new ObjectParameter("id_detCompra", id_detCompra) :
                new ObjectParameter("id_detCompra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetalleCompraBuscar_Result>("DetalleCompraBuscar", id_detCompraParameter);
        }
    
        public virtual int DetalleDevolucionCompra_INS(string codigoProdu, Nullable<int> idDev, Nullable<int> cantidad, string motivo)
        {
            var codigoProduParameter = codigoProdu != null ?
                new ObjectParameter("CodigoProdu", codigoProdu) :
                new ObjectParameter("CodigoProdu", typeof(string));
    
            var idDevParameter = idDev.HasValue ?
                new ObjectParameter("IdDev", idDev) :
                new ObjectParameter("IdDev", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("Motivo", motivo) :
                new ObjectParameter("Motivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetalleDevolucionCompra_INS", codigoProduParameter, idDevParameter, cantidadParameter, motivoParameter);
        }
    
        public virtual ObjectResult<DetalleDevolucionCompra_S_Result> DetalleDevolucionCompra_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetalleDevolucionCompra_S_Result>("DetalleDevolucionCompra_S");
        }
    
        public virtual ObjectResult<DetalleVenta_Busqueda_Result> DetalleVenta_Busqueda(Nullable<int> idDetVenta)
        {
            var idDetVentaParameter = idDetVenta.HasValue ?
                new ObjectParameter("idDetVenta", idDetVenta) :
                new ObjectParameter("idDetVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetalleVenta_Busqueda_Result>("DetalleVenta_Busqueda", idDetVentaParameter);
        }
    
        public virtual int DetalleVenta_INS(Nullable<int> id_venta, string codigoProd, Nullable<int> cantidad)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            var codigoProdParameter = codigoProd != null ?
                new ObjectParameter("CodigoProd", codigoProd) :
                new ObjectParameter("CodigoProd", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetalleVenta_INS", id_ventaParameter, codigoProdParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<DetalleVenta_S_Result> DetalleVenta_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetalleVenta_S_Result>("DetalleVenta_S");
        }
    
        public virtual int DetalleVenta_UPD(Nullable<int> idDetVenta, string codigoProd, Nullable<int> nuevaCantidad)
        {
            var idDetVentaParameter = idDetVenta.HasValue ?
                new ObjectParameter("idDetVenta", idDetVenta) :
                new ObjectParameter("idDetVenta", typeof(int));
    
            var codigoProdParameter = codigoProd != null ?
                new ObjectParameter("CodigoProd", codigoProd) :
                new ObjectParameter("CodigoProd", typeof(string));
    
            var nuevaCantidadParameter = nuevaCantidad.HasValue ?
                new ObjectParameter("nuevaCantidad", nuevaCantidad) :
                new ObjectParameter("nuevaCantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetalleVenta_UPD", idDetVentaParameter, codigoProdParameter, nuevaCantidadParameter);
        }
    
        public virtual int DevolucionCompra_INS(Nullable<int> idCompra)
        {
            var idCompraParameter = idCompra.HasValue ?
                new ObjectParameter("IdCompra", idCompra) :
                new ObjectParameter("IdCompra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DevolucionCompra_INS", idCompraParameter);
        }
    
        public virtual ObjectResult<DevolucionCompra_S_Result> DevolucionCompra_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DevolucionCompra_S_Result>("DevolucionCompra_S");
        }
    
        public virtual ObjectResult<string> PresentacionProducto_Busqueda(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PresentacionProducto_Busqueda", idParameter);
        }
    
        public virtual int PresentacionProducto_DEL(Nullable<int> idPresentacion)
        {
            var idPresentacionParameter = idPresentacion.HasValue ?
                new ObjectParameter("idPresentacion", idPresentacion) :
                new ObjectParameter("idPresentacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PresentacionProducto_DEL", idPresentacionParameter);
        }
    
        public virtual ObjectResult<string> PresentacionProducto_INS(string presentacion)
        {
            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PresentacionProducto_INS", presentacionParameter);
        }
    
        public virtual ObjectResult<PresentacionProducto_S_Result> PresentacionProducto_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PresentacionProducto_S_Result>("PresentacionProducto_S");
        }
    
        public virtual ObjectResult<Producto_Buscar_Result> Producto_Buscar(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Producto_Buscar_Result>("Producto_Buscar", codigoParameter);
        }
    
        public virtual ObjectResult<string> Producto_DEL(string idProducto)
        {
            var idProductoParameter = idProducto != null ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Producto_DEL", idProductoParameter);
        }
    
        public virtual int Producto_INS(string codigo, string nombre, string desc, string uso, Nullable<double> precio, Nullable<int> existencia, Nullable<int> idTipo, Nullable<int> idRubro, Nullable<int> idPresentacion, string concentracion, string laboratorio, Nullable<bool> reseta, Nullable<bool> estado_p, Nullable<System.DateTime> fecha_elaboracion, Nullable<System.DateTime> fecha_vencimiento)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var usoParameter = uso != null ?
                new ObjectParameter("uso", uso) :
                new ObjectParameter("uso", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var existenciaParameter = existencia.HasValue ?
                new ObjectParameter("existencia", existencia) :
                new ObjectParameter("existencia", typeof(int));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var idRubroParameter = idRubro.HasValue ?
                new ObjectParameter("idRubro", idRubro) :
                new ObjectParameter("idRubro", typeof(int));
    
            var idPresentacionParameter = idPresentacion.HasValue ?
                new ObjectParameter("idPresentacion", idPresentacion) :
                new ObjectParameter("idPresentacion", typeof(int));
    
            var concentracionParameter = concentracion != null ?
                new ObjectParameter("concentracion", concentracion) :
                new ObjectParameter("concentracion", typeof(string));
    
            var laboratorioParameter = laboratorio != null ?
                new ObjectParameter("laboratorio", laboratorio) :
                new ObjectParameter("laboratorio", typeof(string));
    
            var resetaParameter = reseta.HasValue ?
                new ObjectParameter("reseta", reseta) :
                new ObjectParameter("reseta", typeof(bool));
    
            var estado_pParameter = estado_p.HasValue ?
                new ObjectParameter("estado_p", estado_p) :
                new ObjectParameter("estado_p", typeof(bool));
    
            var fecha_elaboracionParameter = fecha_elaboracion.HasValue ?
                new ObjectParameter("fecha_elaboracion", fecha_elaboracion) :
                new ObjectParameter("fecha_elaboracion", typeof(System.DateTime));
    
            var fecha_vencimientoParameter = fecha_vencimiento.HasValue ?
                new ObjectParameter("fecha_vencimiento", fecha_vencimiento) :
                new ObjectParameter("fecha_vencimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Producto_INS", codigoParameter, nombreParameter, descParameter, usoParameter, precioParameter, existenciaParameter, idTipoParameter, idRubroParameter, idPresentacionParameter, concentracionParameter, laboratorioParameter, resetaParameter, estado_pParameter, fecha_elaboracionParameter, fecha_vencimientoParameter);
        }
    
        public virtual ObjectResult<Producto_S_Result> Producto_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Producto_S_Result>("Producto_S");
        }
    
        public virtual ObjectResult<string> Producto_UPD(string codigo, string nombre, string desc, string uso, Nullable<double> precio, Nullable<int> existencia, Nullable<int> idTipo, Nullable<int> idRubro, Nullable<int> idPresentacion, string concentracion, string laboratorio, Nullable<bool> reseta, Nullable<System.DateTime> fecha_elaboracion, Nullable<System.DateTime> fecha_vencimiento)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var usoParameter = uso != null ?
                new ObjectParameter("uso", uso) :
                new ObjectParameter("uso", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var existenciaParameter = existencia.HasValue ?
                new ObjectParameter("existencia", existencia) :
                new ObjectParameter("existencia", typeof(int));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var idRubroParameter = idRubro.HasValue ?
                new ObjectParameter("idRubro", idRubro) :
                new ObjectParameter("idRubro", typeof(int));
    
            var idPresentacionParameter = idPresentacion.HasValue ?
                new ObjectParameter("idPresentacion", idPresentacion) :
                new ObjectParameter("idPresentacion", typeof(int));
    
            var concentracionParameter = concentracion != null ?
                new ObjectParameter("concentracion", concentracion) :
                new ObjectParameter("concentracion", typeof(string));
    
            var laboratorioParameter = laboratorio != null ?
                new ObjectParameter("laboratorio", laboratorio) :
                new ObjectParameter("laboratorio", typeof(string));
    
            var resetaParameter = reseta.HasValue ?
                new ObjectParameter("reseta", reseta) :
                new ObjectParameter("reseta", typeof(bool));
    
            var fecha_elaboracionParameter = fecha_elaboracion.HasValue ?
                new ObjectParameter("fecha_elaboracion", fecha_elaboracion) :
                new ObjectParameter("fecha_elaboracion", typeof(System.DateTime));
    
            var fecha_vencimientoParameter = fecha_vencimiento.HasValue ?
                new ObjectParameter("fecha_vencimiento", fecha_vencimiento) :
                new ObjectParameter("fecha_vencimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Producto_UPD", codigoParameter, nombreParameter, descParameter, usoParameter, precioParameter, existenciaParameter, idTipoParameter, idRubroParameter, idPresentacionParameter, concentracionParameter, laboratorioParameter, resetaParameter, fecha_elaboracionParameter, fecha_vencimientoParameter);
        }
    
        public virtual ObjectResult<string> Proveedor_Busqueda(Nullable<int> idProv)
        {
            var idProvParameter = idProv.HasValue ?
                new ObjectParameter("IdProv", idProv) :
                new ObjectParameter("IdProv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Proveedor_Busqueda", idProvParameter);
        }
    
        public virtual ObjectResult<string> Proveedor_DEL(Nullable<int> idProv)
        {
            var idProvParameter = idProv.HasValue ?
                new ObjectParameter("IdProv", idProv) :
                new ObjectParameter("IdProv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Proveedor_DEL", idProvParameter);
        }
    
        public virtual int Proveedor_INS(string nombre_proveedor, string dir, string website, string correo, string cuenta_banco, string tel)
        {
            var nombre_proveedorParameter = nombre_proveedor != null ?
                new ObjectParameter("Nombre_proveedor", nombre_proveedor) :
                new ObjectParameter("Nombre_proveedor", typeof(string));
    
            var dirParameter = dir != null ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var cuenta_bancoParameter = cuenta_banco != null ?
                new ObjectParameter("cuenta_banco", cuenta_banco) :
                new ObjectParameter("cuenta_banco", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proveedor_INS", nombre_proveedorParameter, dirParameter, websiteParameter, correoParameter, cuenta_bancoParameter, telParameter);
        }
    
        public virtual ObjectResult<Proveedor_S_Result> Proveedor_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proveedor_S_Result>("Proveedor_S");
        }
    
        public virtual int Proveedor_UPD(Nullable<int> idProv, string nombreProv, string dir, string website, string correo, string cuenta_banco, string tel)
        {
            var idProvParameter = idProv.HasValue ?
                new ObjectParameter("idProv", idProv) :
                new ObjectParameter("idProv", typeof(int));
    
            var nombreProvParameter = nombreProv != null ?
                new ObjectParameter("NombreProv", nombreProv) :
                new ObjectParameter("NombreProv", typeof(string));
    
            var dirParameter = dir != null ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var cuenta_bancoParameter = cuenta_banco != null ?
                new ObjectParameter("cuenta_banco", cuenta_banco) :
                new ObjectParameter("cuenta_banco", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proveedor_UPD", idProvParameter, nombreProvParameter, dirParameter, websiteParameter, correoParameter, cuenta_bancoParameter, telParameter);
        }
    
        public virtual ObjectResult<string> Rubro_Busqueda(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Rubro_Busqueda", idParameter);
        }
    
        public virtual int Rubro_DEL(Nullable<int> idRubro)
        {
            var idRubroParameter = idRubro.HasValue ?
                new ObjectParameter("IdRubro", idRubro) :
                new ObjectParameter("IdRubro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rubro_DEL", idRubroParameter);
        }
    
        public virtual ObjectResult<string> Rubro_INS(string rubro)
        {
            var rubroParameter = rubro != null ?
                new ObjectParameter("rubro", rubro) :
                new ObjectParameter("rubro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Rubro_INS", rubroParameter);
        }
    
        public virtual ObjectResult<Rubro_S_Result> Rubro_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rubro_S_Result>("Rubro_S");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TipoProducto_Busqueda_Result> TipoProducto_Busqueda(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipoProducto_Busqueda_Result>("TipoProducto_Busqueda", idParameter);
        }
    
        public virtual int TipoProducto_DEL(Nullable<int> idTipo)
        {
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("IdTipo", idTipo) :
                new ObjectParameter("IdTipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoProducto_DEL", idTipoParameter);
        }
    
        public virtual ObjectResult<string> TipoProducto_INS(string tipo)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TipoProducto_INS", tipoParameter);
        }
    
        public virtual ObjectResult<TipoProducto_S_Result> TipoProducto_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipoProducto_S_Result>("TipoProducto_S");
        }
    
        public virtual ObjectResult<Usuario_Busqueda_Result> Usuario_Busqueda(string nuser, string pass)
        {
            var nuserParameter = nuser != null ?
                new ObjectParameter("nuser", nuser) :
                new ObjectParameter("nuser", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usuario_Busqueda_Result>("Usuario_Busqueda", nuserParameter, passParameter);
        }
    
        public virtual ObjectResult<string> Usuario_BusquedaName(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Usuario_BusquedaName", idParameter);
        }
    
        public virtual int Usuario_INS(string dNI, string pN, string sN, string pA, string sA, Nullable<System.DateTime> fechaNac, string dir, string tel, string nuser, string pass, string role)
        {
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var pNParameter = pN != null ?
                new ObjectParameter("PN", pN) :
                new ObjectParameter("PN", typeof(string));
    
            var sNParameter = sN != null ?
                new ObjectParameter("SN", sN) :
                new ObjectParameter("SN", typeof(string));
    
            var pAParameter = pA != null ?
                new ObjectParameter("PA", pA) :
                new ObjectParameter("PA", typeof(string));
    
            var sAParameter = sA != null ?
                new ObjectParameter("SA", sA) :
                new ObjectParameter("SA", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("fechaNac", fechaNac) :
                new ObjectParameter("fechaNac", typeof(System.DateTime));
    
            var dirParameter = dir != null ?
                new ObjectParameter("dir", dir) :
                new ObjectParameter("dir", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var nuserParameter = nuser != null ?
                new ObjectParameter("nuser", nuser) :
                new ObjectParameter("nuser", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usuario_INS", dNIParameter, pNParameter, sNParameter, pAParameter, sAParameter, fechaNacParameter, dirParameter, telParameter, nuserParameter, passParameter, roleParameter);
        }
    
        public virtual ObjectResult<Venta_Busqueda_Result> Venta_Busqueda(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Venta_Busqueda_Result>("Venta_Busqueda", id_ventaParameter);
        }
    
        public virtual int Venta_INS(Nullable<int> id_Cliente, Nullable<int> idUsuario)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Venta_INS", id_ClienteParameter, idUsuarioParameter);
        }
    
        public virtual ObjectResult<Venta_S_Result> Venta_S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Venta_S_Result>("Venta_S");
        }
    
        public virtual int Venta_UPD(Nullable<int> id_venta, Nullable<int> id_cliente)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Venta_UPD", id_ventaParameter, id_clienteParameter);
        }
    }
}
